# Builds a final release version and pushes to nuget.org 
# whenever a release is published.
# Requires: secrets.NUGET_API_KEY

name: publish
on:
  release:
    types: [released]

env:
  DOTNET_NOLOGO: true
  Configuration: Release

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: 🤘 checkout
        uses: actions/checkout@v2
        with: 
          submodules: recursive
          fetch-depth: 0

      - name: ⚙ dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: ⏬ download
        run: |
          mkdir obj && pushd obj
          mkdir win-x64; mkdir win-x86; mkdir linux-x64; mkdir linux-x86; mkdir osx-x64; mkdir osx-arm64
          popd;
          
          curl https://download-chromium.appspot.com/dl/Win_x64?type=snapshots -L -o obj/win-x64/native.zip
          unzip obj/win-x64/native.zip -d src/chromium.win-x64

          curl https://download-chromium.appspot.com/dl/Win?type=snapshots -L -o obj/win-x86/native.zip
          unzip obj/win-x86/native.zip -d src/chromium.win-x86

          curl https://download-chromium.appspot.com/dl/Linux_x64?type=snapshots -L -o obj/linux-x64/native.zip
          unzip obj/linux-x64/native.zip -d src/chromium.linux-x64

          curl https://download-chromium.appspot.com/dl/Linux?type=snapshots -L -o obj/linux-x86/native.zip
          unzip obj/linux-x86/native.zip -d src/chromium.linux-x86

      - name: 🙏 build
        run: dotnet build -m:1 -p:version=${GITHUB_REF#refs/*/v}

      - name: 🧪 test
        uses: ./.github/workflows/test

      - name: 📦 pack
        run: dotnet pack -m:1 -p:version=${GITHUB_REF#refs/*/v}

      - name: 🚀 nuget
        run: dotnet nuget push ./bin/**/*.nupkg -s https://api.nuget.org/v3/index.json -k ${{secrets.NUGET_API_KEY}} --skip-duplicate
