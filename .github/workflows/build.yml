# Builds and runs tests in all three supported OSes
# Pushes CI feed if secrets.SLEET_CONNECTION is provided

name: build
on: 
  workflow_dispatch:
  push:
    branches: [ main, dev, 'feature/*', 'rel/*' ]
    paths-ignore:
      - changelog.md
      - code-of-conduct.md
      - security.md
      - support.md
      - readme.md
  pull_request:
    types: [opened, synchronize, reopened]

env:
  DOTNET_NOLOGO: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 🤘 checkout
        uses: actions/checkout@v2

      - name: ⚙ dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: ⏬ download
        run: |
          mkdir obj
          
          curl https://download-chromium.appspot.com/dl/Win_x64?type=snapshots -L -o obj/win-x64.zip
          unzip obj/win-x64.zip -d src/chromium.win-x64
          echo Chromium build https://crrev.com/$(curl --silent https://download-chromium.appspot.com/rev/Win_x64?type=snapshots | grep -oP "\d{6,}") > src/chromium.win-x64/readme.md

          curl https://download-chromium.appspot.com/dl/Win?type=snapshots -L -o obj/win-x86.zip
          unzip obj/win-x86.zip -d src/chromium.win-x86
          echo Chromium build https://crrev.com/$(curl --silent https://download-chromium.appspot.com/rev/Win?type=snapshots | grep -oP "\d{6,}") > src/chromium.win-x86/readme.md

          curl https://download-chromium.appspot.com/dl/Linux_x64?type=snapshots -L -o obj/linux-x64.zip
          unzip obj/linux-x64.zip -d src/chromium.linux-x64
          echo Chromium build https://crrev.com/$(curl --silent https://download-chromium.appspot.com/rev/Linux_x64?type=snapshots | grep -oP "\d{6,}") > src/chromium.linux-x64/readme.md

          curl https://download-chromium.appspot.com/dl/Mac?type=snapshots -L -o obj/osx-x64.zip
          unzip obj/osx-x64.zip -d src/chromium.osx-x64

          curl https://download-chromium.appspot.com/dl/Mac_Arm?type=snapshots -L -o obj/osx-arm64.zip
          unzip obj/osx-x64.zip -d src/chromium.osx-arm64

      - name: 🙏 build
        run: dotnet build -m:1 -p:VersionLabel="$GITHUB_REF.$GITHUB_RUN_NUMBER"

      - name: 📦 pack
        run: dotnet pack -m:1 -p:VersionLabel="$GITHUB_REF.$GITHUB_RUN_NUMBER"

      - name: 🚀 sleet
        env:
          SLEET_CONNECTION: ${{ secrets.SLEET_CONNECTION }}
        if: env.SLEET_CONNECTION != ''
        run: |
          dotnet tool install -g --version 4.0.18 sleet 
          sleet push bin --config none -f --verbose -p "SLEET_FEED_CONTAINER=nuget" -p "SLEET_FEED_CONNECTIONSTRING=${{ secrets.SLEET_CONNECTION }}" -p "SLEET_FEED_TYPE=azure" || echo "No packages found"
