<Project InitialTargets="SetLocalVersion">

  <PropertyGroup Condition="'$(RuntimeIdentifier)' != '' and '$(RuntimeIdentifier)' != 'any'">
    <EnableDefaultItems>false</EnableDefaultItems>
    <RuntimeOs>$(RuntimeIdentifier.Substring(0, $(RuntimeIdentifier.IndexOf('-'))))</RuntimeOs>
    <RuntimeOs Condition="'$(RuntimeOs)' == 'mac'">osx</RuntimeOs>
  </PropertyGroup>

  <ItemGroup Condition="'$(RuntimeIdentifier)' != ''">
    <None Include="readme.md" Condition="Exists('readme.md')" Pack="true" />
    <!-- NOTE: to get these binaries for local testing, download and extract to 'native' 
         folder from https://download-chromium.appspot.com/ for the relevant platform 
         Also, we need to use the specific relative folder path (as opposed to 'chrome-*') 
         since otherwise that segment becomes part of %(RecursiveDir) -->
    <None Include="chrome-$(RuntimeOs)/**/*.*"
          PackagePath="runtimes/$(RuntimeIdentifier)/native/%(RecursiveDir)%(Filename)%(Extension)"
          CopyToOutputDirectory="PreserveNewest"
          TargetPath="runtimes/$(RuntimeIdentifier)/native/%(RecursiveDir)%(Filename)%(Extension)" />          
  </ItemGroup>

  <Target Name="SetLocalVersion" Condition="!$(CI) and '$(Version)' == ''">
    <GetVersion>
      <Output TaskParameter="Version" PropertyName="Version" />
    </GetVersion>
  </Target>

  <UsingTask TaskName="GetVersion" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <Version Output="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System" />
      <Using Namespace="Microsoft.Build.Framework"/>
      <Code Type="Fragment" Language="cs">
        <![CDATA[
        var version = this.BuildEngine4.GetRegisteredTaskObject("Version", RegisteredTaskObjectLifetime.Build);
        if (version == null)
        {
            var epoc = DateTime.Parse("2024-03-15");
            var days = Math.Truncate(DateTime.UtcNow.Subtract(epoc).TotalDays);
            var time = Math.Floor(DateTime.UtcNow.TimeOfDay.TotalMinutes);
            version = "42." + days + "." + time;
            this.BuildEngine4.RegisterTaskObject("Version", version, RegisteredTaskObjectLifetime.Build, false);
        }
        Version = (string)version;
        ]]>
      </Code>
    </Task>
  </UsingTask>

</Project>